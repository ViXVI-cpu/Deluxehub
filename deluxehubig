--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v86 = 0;
			local v87;
			while true do
				if (v86 == 0) then
					v87 = v2(v0(v30, 16));
					if v19 then
						local v122 = v5(v87, v19);
						v19 = nil;
						return v122;
					else
						return v87;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v88 = (v31 / ((1 + 1) ^ (v32 - (2 - 1)))) % (((1 + 4) - 3) ^ (((v33 - 1) - (v32 - 1)) + (1 - 0)));
			return v88 - (v88 % (2 - 1));
		else
			local v89 = ((1498 - (282 + 595)) - (555 + 64)) ^ (v32 - (932 - (857 + 74)));
			return (((v31 % (v89 + v89)) >= v89) and (569 - (367 + 201))) or (927 - (214 + 713));
		end
	end
	local function v21()
		local v34 = 1637 - (1523 + 114);
		local v35;
		while true do
			if (v34 == (0 + 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (1 - 0);
				v34 = 1;
			end
			if (v34 == ((2336 - (226 + 1044)) - (68 + 997))) then
				return v35;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (8 - 6));
		v18 = v18 + (119 - (32 + 85));
		return (v37 * 256) + v36;
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + 3 + 0);
		v18 = v18 + 1 + 3;
		return (v41 * 16777216) + (v40 * (66493 - ((1648 - 756) + 65))) + (v39 * (610 - 354)) + v38;
	end
	local function v24()
		local v42 = (442 - (416 + 26)) - 0;
		local v43;
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		while true do
			if (v42 == (351 - (87 + 263))) then
				v45 = 181 - (67 + 113);
				v46 = (v20(v44, 1 + 0, 20) * (2 ^ (78 - 46))) + v43;
				v42 = 2 + 0;
			end
			if (v42 == ((22 - 15) - 5)) then
				v47 = v20(v44, 973 - (802 + 65 + 85), 83 - 52);
				v48 = ((v20(v44, 57 - 25) == (1 + 0)) and -(998 - (915 + 82))) or (2 - 1);
				v42 = 2 + 1;
			end
			if (v42 == 0) then
				v43 = v23();
				v44 = v23();
				v42 = 1 - 0;
			end
			if (v42 == 3) then
				if (v47 == (1187 - (1069 + 118))) then
					if (v46 == (0 - 0)) then
						return v48 * (0 - 0);
					else
						local v123 = 0;
						while true do
							if (v123 == 0) then
								v47 = 1;
								v45 = 0 + (0 - 0);
								break;
							end
						end
					end
				elseif (v47 == (3636 - 1589)) then
					return ((v46 == (0 + 0)) and (v48 * (1 / (791 - (368 + (861 - (145 + 293))))))) or (v48 * NaN);
				end
				return v8(v48, v47 - (3214 - (2621 - (44 + 386)))) * (v45 + (v46 / ((20 - (10 + 8)) ^ (199 - 147))));
			end
		end
	end
	local function v25(v49)
		local v50 = 1486 - (998 + 488);
		local v51;
		local v52;
		while true do
			if (v50 == (1 + (1081 - (1020 + 60)))) then
				v52 = {};
				for v111 = 1 + 0, #v51 do
					v52[v111] = v2(v1(v3(v51, v111, v111)));
				end
				v50 = 10 - (1430 - (630 + 793));
			end
			if ((862 - (814 + 45)) == v50) then
				return v6(v52);
			end
			if (v50 == ((2619 - 1846) - (201 + 571))) then
				v51 = v3(v16, v18, (v18 + v49) - (1 + 0));
				v18 = v18 + v49;
				v50 = 1140 - (116 + (4838 - 3816));
			end
			if (v50 == (885 - (261 + 246 + 378))) then
				v51 = nil;
				if not v49 then
					v49 = v23();
					if (v49 == (0 - 0)) then
						return "";
					end
				end
				v50 = 1;
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v53 = (function()
			return function(v90, v91, v92, v93, v94, v95, v96, v97)
				local v90 = (function()
					return 0;
				end)();
				local v91 = (function()
					return;
				end)();
				local v93 = (function()
					return;
				end)();
				while true do
					if (v90 == 0) then
						local v117 = (function()
							return 0 - 0;
						end)();
						local v118 = (function()
							return;
						end)();
						while true do
							if ((0 + 0) == v117) then
								v118 = (function()
									return 0;
								end)();
								while true do
									if ((0 - 0) == v118) then
										v91 = (function()
											return v92();
										end)();
										v93 = (function()
											return nil;
										end)();
										v118 = (function()
											return 1 - 0;
										end)();
									end
									if (v118 == (1 - 0)) then
										v90 = (function()
											return #"{";
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					if (v90 == #"]") then
						if (v91 == #",") then
							v93 = (function()
								return v92() ~= 0;
							end)();
						elseif (v91 == (5 - 3)) then
							v93 = (function()
								return v94();
							end)();
						elseif (v91 ~= #"xnx") then
						else
							v93 = (function()
								return v95();
							end)();
						end
						v96[v97] = (function()
							return v93;
						end)();
						break;
					end
				end
				return v90, v91, v92, v93, v94, v95, v96, v97;
			end;
		end)();
		local v54 = (function()
			return function(v98, v99, v100)
				local v101 = (function()
					return 285 - (134 + 151);
				end)();
				local v102 = (function()
					return;
				end)();
				while true do
					if (0 ~= v101) then
					else
						v102 = (function()
							return 0;
						end)();
						while true do
							if (v102 == 0) then
								local v124 = (function()
									return 1665 - (970 + 695);
								end)();
								while true do
									if (v124 ~= (0 - 0)) then
									else
										v98[v99 - #"/"] = (function()
											return v100();
										end)();
										return v98, v99, v100;
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {};
		end)();
		local v58 = (function()
			return {v55,v56,nil,v57};
		end)();
		local v59 = (function()
			return v23();
		end)();
		local v60 = (function()
			return {};
		end)();
		for v68 = #"|", v59 do
			FlatIdent_854BA, Type, v21, Cons, v24, v25, v60, v68 = (function()
				return v53(FlatIdent_854BA, Type, v21, Cons, v24, v25, v60, v68);
			end)();
		end
		v58[#"-19"] = (function()
			return v21();
		end)();
		for v69 = #":", v23() do
			local v70 = (function()
				return v21();
			end)();
			if (v20(v70, #" ", #"|") ~= (1990 - (582 + 1408))) then
			else
				local v106 = (function()
					return 0;
				end)();
				local v107 = (function()
					return;
				end)();
				local v108 = (function()
					return;
				end)();
				local v109 = (function()
					return;
				end)();
				local v110 = (function()
					return;
				end)();
				while true do
					if (v106 == 2) then
						while true do
							if (v107 == #"xxx") then
								if (v20(v109, #"91(", #"-19") == #"]") then
									v110[#"xnxx"] = (function()
										return v60[v110[#"?id="]];
									end)();
								end
								v55[v69] = (function()
									return v110;
								end)();
								break;
							end
							if (0 ~= v107) then
							else
								local v126 = (function()
									return 0 - 0;
								end)();
								local v127 = (function()
									return;
								end)();
								while true do
									if (v126 ~= (0 - 0)) then
									else
										v127 = (function()
											return 0;
										end)();
										while true do
											if (v127 == (3 - 2)) then
												v107 = (function()
													return #"/";
												end)();
												break;
											end
											if (v127 ~= (1824 - (1195 + 629))) then
											else
												v108 = (function()
													return v20(v70, 2 - 0, #"91(");
												end)();
												v109 = (function()
													return v20(v70, #"0313", 247 - (187 + 54));
												end)();
												v127 = (function()
													return 781 - (162 + 618);
												end)();
											end
										end
										break;
									end
								end
							end
							if (v107 == 2) then
								local v128 = (function()
									return 0 + 0;
								end)();
								local v129 = (function()
									return;
								end)();
								while true do
									if ((0 + 0) ~= v128) then
									else
										v129 = (function()
											return 0 - 0;
										end)();
										while true do
											if (v129 == (0 - 0)) then
												if (v20(v109, #"[", #"<") == #"|") then
													v110[2] = (function()
														return v60[v110[1 + 1]];
													end)();
												end
												if (v20(v109, 2, 1638 - (1373 + 263)) == #" ") then
													v110[#"gha"] = (function()
														return v60[v110[#"nil"]];
													end)();
												end
												v129 = (function()
													return 1001 - (451 + 549);
												end)();
											end
											if (v129 == 1) then
												v107 = (function()
													return #"xnx";
												end)();
												break;
											end
										end
										break;
									end
								end
							end
							if (v107 == #":") then
								local v130 = (function()
									return 0 + 0;
								end)();
								local v131 = (function()
									return;
								end)();
								while true do
									if (v130 == (0 - 0)) then
										v131 = (function()
											return 0;
										end)();
										while true do
											if (v131 == (0 - 0)) then
												v110 = (function()
													return {v22(),v22(),nil,nil};
												end)();
												if (v108 == (1384 - (746 + 638))) then
													local v349 = (function()
														return 0;
													end)();
													local v350 = (function()
														return;
													end)();
													while true do
														if (v349 == 0) then
															v350 = (function()
																return 0;
															end)();
															while true do
																if (v350 == 0) then
																	v110[#"19("] = (function()
																		return v22();
																	end)();
																	v110[#"?id="] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												elseif (v108 == #":") then
													v110[#"-19"] = (function()
														return v23();
													end)();
												elseif (v108 == (1 + 1)) then
													v110[#"xnx"] = (function()
														return v23() - (2 ^ 16);
													end)();
												elseif (v108 == #"asd") then
													local v497 = (function()
														return 0 - 0;
													end)();
													local v498 = (function()
														return;
													end)();
													while true do
														if ((341 - (218 + 123)) == v497) then
															v498 = (function()
																return 0;
															end)();
															while true do
																if (v498 ~= 0) then
																else
																	v110[#"xxx"] = (function()
																		return v23() - (2 ^ (1597 - (1535 + 46)));
																	end)();
																	v110[#"http"] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												end
												v131 = (function()
													return 1 + 0;
												end)();
											end
											if (v131 == (1 + 0)) then
												v107 = (function()
													return 562 - (306 + 254);
												end)();
												break;
											end
										end
										break;
									end
								end
							end
						end
						break;
					end
					if (v106 == (1 + 0)) then
						local v120 = (function()
							return 0;
						end)();
						while true do
							if (v120 == 1) then
								v106 = (function()
									return 3 - 1;
								end)();
								break;
							end
							if (v120 ~= 0) then
							else
								v109 = (function()
									return nil;
								end)();
								v110 = (function()
									return nil;
								end)();
								v120 = (function()
									return 1468 - (899 + 568);
								end)();
							end
						end
					end
					if ((0 + 0) ~= v106) then
					else
						local v121 = (function()
							return 0;
						end)();
						while true do
							if (v121 ~= 1) then
							else
								v106 = (function()
									return 1;
								end)();
								break;
							end
							if (0 == v121) then
								v107 = (function()
									return 0 - 0;
								end)();
								v108 = (function()
									return nil;
								end)();
								v121 = (function()
									return 1;
								end)();
							end
						end
					end
				end
			end
		end
		for v71 = #"[", v23() do
			v56, v71, v28 = (function()
				return v54(v56, v71, v28);
			end)();
		end
		return v58;
	end
	local function v29(v62, v63, v64)
		local v65 = v62[(239 + 365) - (268 + 176 + 159)];
		local v66 = v62[2];
		local v67 = v62[3];
		return function(...)
			local v72 = v65;
			local v73 = v66;
			local v74 = v67;
			local v75 = v27;
			local v76 = 291 - (60 + 230);
			local v77 = -(573 - (426 + 133 + 13));
			local v78 = {};
			local v79 = {...};
			local v80 = v12("#", ...) - (1457 - (282 + 851 + 323));
			local v81 = {};
			local v82 = {};
			for v103 = 0, v80 do
				if (v103 >= v74) then
					v78[v103 - v74] = v79[v103 + (812 - ((865 - 296) + 242))];
				else
					v82[v103] = v79[v103 + 1];
				end
			end
			local v83 = (v80 - v74) + 1;
			local v84;
			local v85;
			while true do
				v84 = v72[v76];
				v85 = v84[2 - 1];
				if (v85 <= 50) then
					if ((3716 == 3716) and (v85 <= (2 + 22))) then
						if ((v85 <= (1035 - (706 + 318))) or (3352 == 4722)) then
							if (v85 <= (1256 - (721 + 530))) then
								if (v85 <= 2) then
									if (v85 <= (1271 - (945 + 326))) then
										v82[v84[4 - (2 + 0)]] = v82[v84[3 + 0]] + v84[704 - (271 + 429)];
									elseif ((v85 > (1 + 0)) or (740 < 160)) then
										v82[v84[2]] = {};
									else
										v82[v84[1502 - (1408 + 92)]] = v84[1089 - (461 + 625)];
									end
								elseif (v85 <= 3) then
									local v135 = v84[1290 - (993 + 295)];
									do
										return v82[v135](v13(v82, v135 + 1 + 0, v84[1174 - (418 + 753)]));
									end
								elseif (v85 > (2 + 2)) then
									local v204 = 0 + 0;
									local v205;
									local v206;
									local v207;
									while true do
										if (v204 == 1) then
											v207 = v82[v205] + v206;
											v82[v205] = v207;
											v204 = 1 + 1;
										end
										if (((0 + (667 - (89 + 578))) == v204) or (3658 > 3664)) then
											v205 = v84[(380 + 151) - (406 + 123)];
											v206 = v82[v205 + (1771 - (1749 + 20))];
											v204 = 1;
										end
										if ((3805 >= 1031) and (v204 == (1 + 1))) then
											if (v206 > (1322 - (1249 + 73))) then
												if (v207 <= v82[v205 + 1 + 0]) then
													v76 = v84[3];
													v82[v205 + (1148 - ((968 - 502) + 679))] = v207;
												end
											elseif ((3194 > 3007) and (v207 >= v82[v205 + (2 - (1050 - (572 + 477)))])) then
												v76 = v84[(2 + 6) - 5];
												v82[v205 + 3] = v207;
											end
											break;
										end
									end
								else
									v82[v84[1902 - (106 + 1794)]][v82[v84[1 + 2]]] = v82[v84[2 + 2]];
								end
							elseif (v85 <= (23 - 15)) then
								if ((v85 <= (16 - 10)) or (2136 >= 2946)) then
									v82[v84[116 - (3 + 1 + 110)]][v84[587 - (57 + 527)]] = v82[v84[1431 - (41 + 1386)]];
								elseif (v85 == (110 - (17 + 86))) then
									v82[v84[2 + 0]] = v63[v84[3]];
								else
									v82[v84[3 - 1]] = v82[v84[8 - 5]][v84[170 - (122 + 44)]];
								end
							elseif (v85 <= (15 - 6)) then
								local v138 = v84[6 - 4];
								local v139 = {v82[v138](v13(v82, v138 + 1, v77))};
								local v140 = 0;
								for v183 = v138, v84[4 + 0] do
									v140 = v140 + 1 + 0;
									v82[v183] = v139[v140];
								end
							elseif (v85 == (20 - 10)) then
								local v214 = v84[67 - (30 + 35)];
								local v215 = {};
								for v351 = 1 + 0, #v81 do
									local v352 = 1257 - (125 + 918 + 214);
									local v353;
									while true do
										if ((2165 <= 2521) and ((0 - (86 - (84 + 2))) == v352)) then
											v353 = v81[v351];
											for v476 = 0, #v353 do
												local v477 = v353[v476];
												local v478 = v477[1];
												local v479 = v477[1214 - (323 + 889)];
												if ((v478 == v82) and (v479 >= v214)) then
													local v503 = 0;
													while true do
														if (v503 == (0 - 0)) then
															v215[v479] = v478[v479];
															v477[(957 - 376) - (361 + 158 + 61)] = v215;
															break;
														end
													end
												end
											end
											break;
										end
									end
								end
							elseif (v82[v84[322 - (53 + 267)]] == v82[v84[4]]) then
								v76 = v76 + 1 + 0;
							else
								v76 = v84[3];
							end
						elseif (v85 <= (430 - (15 + 398))) then
							if (v85 <= (996 - (18 + 964))) then
								if (v85 <= (44 - (874 - (497 + 345)))) then
									v82[v84[2 + 0]] = v82[v84[2 + 1]];
								elseif (v85 == (863 - (20 + 830))) then
									v82[v84[2 + 0]][v84[129 - (116 + 10)]] = v82[v84[1 + 3]];
								else
									local v218 = v84[3];
									local v219 = v82[v218];
									for v354 = v218 + (739 - (542 + 196)), v84[8 - 4] do
										v219 = v219 .. v82[v354];
									end
									v82[v84[2]] = v219;
								end
							elseif (v85 <= (5 + 10)) then
								v82[v84[2 + 0]] = #v82[v84[2 + 1]];
							elseif (v85 > (41 - 25)) then
								v82[v84[4 - 2]] = v82[v84[1554 - (29 + 1097 + 425)]] + v84[4];
							elseif ((2861 > 661) and v82[v84[407 - (118 + 287)]]) then
								v76 = v76 + (3 - 2);
							else
								v76 = v84[1124 - (118 + 1003)];
							end
						elseif ((4525 > 4519) and (v85 <= 20)) then
							if (v85 <= ((9 + 43) - 34)) then
								v82[v84[(1712 - (605 + 728)) - (142 + 235)]] = v82[v84[13 - 10]] - v82[v84[1 + 3]];
							elseif (v85 == (996 - (395 + 158 + (942 - 518)))) then
								local v222 = v84[3 - 1];
								v82[v222] = v82[v222](v13(v82, v222 + 1 + 0, v84[1 + 2 + 0]));
							else
								local v224 = v84[2];
								v82[v224] = v82[v224](v13(v82, v224 + 1 + 0, v77));
							end
						elseif (v85 <= (10 + 12)) then
							if ((3178 > 972) and (v85 == (12 + 9))) then
								for v355 = v84[4 - (7 - 5)], v84[7 - 4] do
									v82[v355] = nil;
								end
							else
								local v226 = 0;
								local v227;
								local v228;
								local v229;
								local v230;
								while true do
									if (v226 == (0 - 0)) then
										v227 = v84[2];
										v228, v229 = v75(v82[v227](v13(v82, v227 + 1 + 0, v77)));
										v226 = (4 + 0) - 3;
									end
									if ((4766 == 4766) and (v226 == (754 - (239 + 514)))) then
										v77 = (v229 + v227) - (1 + 0);
										v230 = 1329 - (797 + 532);
										v226 = 2 + 0;
									end
									if (v226 == (1 + 1)) then
										for v448 = v227, v77 do
											v230 = v230 + (2 - (2 - 1));
											v82[v448] = v228[v230];
										end
										break;
									end
								end
							end
						elseif (v85 == 23) then
							local v231 = v84[1204 - (373 + 829)];
							local v232 = v84[735 - (476 + 255)];
							local v233 = v231 + (1132 - (369 + 761));
							local v234 = {v82[v231](v82[v231 + 1 + 0], v82[v233])};
							for v357 = 1, v232 do
								v82[v233 + v357] = v234[v357];
							end
							local v235 = v234[1 - 0];
							if (v235 or (2745 > 3128)) then
								local v395 = 0 - 0;
								while true do
									if (v395 == (238 - (64 + 174))) then
										v82[v233] = v235;
										v76 = v84[1 + 2];
										break;
									end
								end
							else
								v76 = v76 + (1 - 0);
							end
						else
							local v236 = 336 - (144 + 145 + 47);
							local v237;
							while true do
								if (v236 == (216 - (42 + 174))) then
									v237 = v84[2];
									v82[v237] = v82[v237](v82[v237 + 1 + 0]);
									break;
								end
							end
						end
					elseif ((v85 <= (31 + 6)) or (1144 >= 4606)) then
						if (v85 <= (13 + 17)) then
							if (v85 <= ((2020 - (457 + 32)) - (363 + 1141))) then
								if (v85 <= 25) then
									local v145 = 0;
									local v146;
									local v147;
									local v148;
									local v149;
									while true do
										if ((1580 - (1183 + 397)) == v145) then
											v146 = v84[5 - 3];
											v147, v148 = v75(v82[v146](v13(v82, v146 + 1 + 0, v84[3 + 0])));
											v145 = 1976 - (1913 + 62);
										end
										if (v145 == (2 + 0)) then
											for v396 = v146, v77 do
												v149 = v149 + 1;
												v82[v396] = v147[v149];
											end
											break;
										end
										if (v145 == (2 - 1)) then
											v77 = (v148 + v146) - (1934 - (565 + 1368));
											v149 = 0 - 0;
											v145 = 1663 - (1477 + 184);
										end
									end
								elseif (v85 > (34 - 8)) then
									local v238 = 0 + 0 + 0;
									local v239;
									local v240;
									local v241;
									while true do
										if (v238 == 1) then
											v241 = v84[3];
											for v451 = 1, v241 do
												v240[v451] = v82[v239 + v451];
											end
											break;
										end
										if (v238 == (856 - (564 + 292))) then
											v239 = v84[2 - 0];
											v240 = v82[v239];
											v238 = (1404 - (832 + 570)) - 1;
										end
									end
								elseif ((3338 >= 277) and (v82[v84[306 - (244 + 60)]] == v84[4 + 0 + 0])) then
									v76 = v76 + (477 - (41 + 435));
								else
									v76 = v84[1004 - (938 + 63)];
								end
							elseif ((2610 > 2560) and (v85 <= (22 + 6))) then
								local v150 = 1125 - (936 + 189);
								local v151;
								local v152;
								local v153;
								while true do
									if (v150 == (1 + 0)) then
										v153 = v82[v151 + (1615 - (1565 + 48))];
										if (v153 > (0 + 0)) then
											if ((v152 > v82[v151 + (1139 - (782 + 356))]) or (1194 > 3083)) then
												v76 = v84[270 - (176 + 91)];
											else
												v82[v151 + 3] = v152;
											end
										elseif (v152 < v82[v151 + (2 - 1)]) then
											v76 = v84[4 - 1];
										else
											v82[v151 + (1095 - (975 + 117))] = v152;
										end
										break;
									end
									if (v150 == (1875 - (157 + 1718))) then
										v151 = v84[1 + 1 + 0];
										v152 = v82[v151];
										v150 = 3 - 2;
									end
								end
							elseif ((916 >= 747) and (v85 > (98 - 69))) then
								do
									return;
								end
							else
								local v242 = v84[2];
								local v243 = v82[v242 + ((3609 - 2589) - (697 + 321))];
								local v244 = v82[v242] + v243;
								v82[v242] = v244;
								if (v243 > (0 - 0)) then
									if (v244 <= v82[v242 + (1 - 0)]) then
										local v454 = 0 - (0 + 0);
										while true do
											if ((0 + 0) == v454) then
												v76 = v84[5 - 2];
												v82[v242 + (7 - 4)] = v244;
												break;
											end
										end
									end
								elseif (v244 >= v82[v242 + (1228 - (322 + 905))]) then
									local v455 = 611 - ((1398 - (588 + 208)) + 9);
									while true do
										if ((v455 == 0) or (2444 > 2954)) then
											v76 = v84[1192 - (449 + (1994 - 1254))];
											v82[v242 + (875 - (826 + 46))] = v244;
											break;
										end
									end
								end
							end
						elseif (v85 <= 33) then
							if (v85 <= 31) then
								local v154 = (2747 - (884 + 916)) - (245 + 702);
								local v155;
								local v156;
								while true do
									if (v154 == ((6 - 3) - 2)) then
										v82[v155 + 1 + 0] = v156;
										v82[v155] = v156[v84[(1103 + 799) - (260 + 1638)]];
										break;
									end
									if ((440 - (382 + 58)) == v154) then
										v155 = v84[6 - 4];
										v156 = v82[v84[3 + 0]];
										v154 = 1 - 0;
									end
								end
							elseif (v85 > 32) then
								for v369 = v84[5 - 3], v84[1208 - (902 + 303)] do
									v82[v369] = nil;
								end
							else
								v82[v84[3 - 1]] = v82[v84[6 - 3]];
							end
						elseif (v85 <= (4 + 31)) then
							if ((2892 < 3514) and (v85 == (1724 - (1121 + 569)))) then
								if not v82[v84[655 - (232 + 421)]] then
									v76 = v76 + (1890 - (1569 + 320));
								else
									v76 = v84[217 - (22 + 192)];
								end
							else
								do
									return v82[v84[685 - (483 + 200)]];
								end
							end
						elseif ((533 == 533) and (v85 > (1499 - (1404 + 15 + 44)))) then
							local v248 = 0 - (0 + 0);
							local v249;
							local v250;
							while true do
								if ((595 <= 3413) and (v248 == (1 - 0))) then
									for v456 = v249 + (766 - ((1576 - 1108) + 297)), v84[565 - (334 + 228)] do
										v7(v250, v82[v456]);
									end
									break;
								end
								if ((3078 >= 2591) and (v248 == 0)) then
									v249 = v84[6 - 4];
									v250 = v82[v249];
									v248 = 2 - 1;
								end
							end
						else
							local v251 = v84[2 - 0];
							v82[v251](v82[v251 + 1 + 0]);
						end
					elseif (v85 <= (279 - (141 + 95))) then
						if (v85 <= ((645 - (316 + 289)) + 0)) then
							if ((3199 < 4030) and (v85 <= (97 - 59))) then
								v82[v84[(10 - 6) - 2]] = v82[v84[3]][v82[v84[4]]];
							elseif (v85 > (10 + 29)) then
								local v252 = v84[2];
								local v253 = {};
								for v371 = 1, #v81 do
									local v372 = 0;
									local v373;
									while true do
										if ((777 < 2078) and (v372 == (0 - 0))) then
											v373 = v81[v371];
											for v486 = 0 + 0, #v373 do
												local v487 = 0;
												local v488;
												local v489;
												local v490;
												while true do
													if (v487 == (1 + 0)) then
														v490 = v488[2 - 0];
														if ((1696 <= 2282) and (v489 == v82) and (v490 >= v252)) then
															local v518 = 0;
															while true do
																if ((v518 == 0) or (1761 >= 2462)) then
																	v253[v490] = v489[v490];
																	v488[1 + 0] = v253;
																	break;
																end
															end
														end
														break;
													end
													if (v487 == (163 - (92 + 71))) then
														v488 = v373[v486];
														v489 = v488[1 + 0];
														v487 = 1;
													end
												end
											end
											break;
										end
									end
								end
							else
								local v254 = v84[2 - (0 + 0)];
								local v255 = v82[v254];
								local v256 = v84[768 - (574 + 191)];
								for v374 = 1 + 0, v256 do
									v255[v374] = v82[v254 + v374];
								end
							end
						elseif (v85 <= (102 - 61)) then
							v82[v84[2 + 0]] = v82[v84[852 - (254 + (2048 - (666 + 787)))]] % v84[4];
						elseif ((4551 > 2328) and (v85 > 42)) then
							v82[v84[(553 - (360 + 65)) - (55 + 71)]]();
						else
							do
								return v82[v84[2 - 0]];
							end
						end
					elseif ((3825 >= 467) and (v85 <= (1836 - (573 + 1138 + 79)))) then
						if (v85 <= (121 - (331 - (79 + 175)))) then
							v82[v84[2]] = v84[1 + 2] + v82[v84[5 - 1]];
						elseif (v85 > 45) then
							local v257 = 939 - (714 + 225);
							local v258;
							while true do
								if (((0 - 0) == v257) or (2890 == 557)) then
									v258 = v84[2];
									v82[v258] = v82[v258](v13(v82, v258 + (1 - 0), v84[1 + (2 - 0)]));
									break;
								end
							end
						else
							v82[v84[2]] = v82[v84[3 - 0]] - v82[v84[4]];
						end
					elseif (v85 <= 48) then
						if (v85 > (853 - (118 + 688))) then
							v82[v84[50 - (20 + 5 + 23)]][v84[1 + (5 - 3)]] = v84[4];
						else
							local v262 = 0;
							local v263;
							while true do
								if (((1886 - (927 + (1846 - 887))) == v262) or (4770 == 2904)) then
									v263 = v84[6 - 4];
									v82[v263](v13(v82, v263 + (733 - (16 + 716)), v84[3]));
									break;
								end
							end
						end
					elseif (v85 == (94 - 45)) then
						if (v84[99 - (11 + 86)] == v82[v84[9 - 5]]) then
							v76 = v76 + (286 - (175 + 110));
						else
							v76 = v84[902 - (503 + 396)];
						end
					else
						local v264 = v84[4 - 2];
						local v265 = v82[v84[14 - 11]];
						v82[v264 + (1797 - (503 + 1293))] = v265;
						v82[v264] = v265[v82[v84[11 - 7]]];
					end
				elseif (v85 <= (55 + 20)) then
					if (v85 <= (1123 - (810 + 251))) then
						if ((v85 <= (39 + (198 - (92 + 89)))) or (3903 == 4536)) then
							if (v85 <= (17 + 36)) then
								if (v85 <= (46 + 5)) then
									v82[v84[535 - (43 + (950 - 460))]] = v82[v84[736 - (711 + 22)]] % v82[v84[4]];
								elseif (v85 == ((103 + 97) - 148)) then
									v82[v84[861 - (240 + 619)]] = v82[v84[1 + 2]][v82[v84[5 - (1 + 0)]]];
								else
									v82[v84[1 + (3 - 2)]] = v29(v73[v84[1 + 2]], nil, v64);
								end
							elseif (v85 <= 54) then
								v82[v84[4 - 2]] = v84[3] + v82[v84[1748 - (1344 + 349 + 51)]];
							elseif (v85 > (460 - (255 + 150))) then
								local v272 = 0 + 0;
								local v273;
								local v274;
								local v275;
								local v276;
								while true do
									if ((4093 <= 4845) and (v272 == (0 + 0 + 0))) then
										v273 = v84[8 - 6];
										v274, v275 = v75(v82[v273](v82[v273 + 1]));
										v272 = 1;
									end
									if ((1569 <= 3647) and (v272 == (6 - 4))) then
										for v458 = v273, v77 do
											v276 = v276 + (1740 - (404 + 1335));
											v82[v458] = v274[v276];
										end
										break;
									end
									if (v272 == (407 - (183 + 223))) then
										v77 = (v275 + v273) - (1 - 0);
										v276 = 0 + 0;
										v272 = 1 + 1;
									end
								end
							else
								local v277 = v73[v84[340 - (10 + 327)]];
								local v278;
								local v279 = {};
								v278 = v10({}, {__index=function(v377, v378)
									local v379 = v279[v378];
									return v379[1 + 0][v379[340 - (118 + 220)]];
								end,__newindex=function(v380, v381, v382)
									local v383 = v279[v381];
									v383[1 + 0][v383[451 - (108 + 341)]] = v382;
								end});
								for v385 = 1, v84[2 + 2] do
									local v386 = 0 - 0;
									local v387;
									while true do
										if (v386 == (1493 - (711 + 782))) then
											v76 = v76 + (1 - (0 + 0));
											v387 = v72[v76];
											v386 = 470 - (270 + (302 - 103));
										end
										if ((v386 == ((1245 - (485 + 759)) + 0)) or (4046 >= 4927)) then
											if (v387[1820 - (580 + 1239)] == 12) then
												v279[v385 - (2 - 1)] = {v82,v387[2 + 1]};
											else
												v279[v385 - (2 - 1)] = {v63,v387[3]};
											end
											v81[#v81 + (2 - 1)] = v279;
											break;
										end
									end
								end
								v82[v84[(2981 - (442 + 747)) - (1010 + 780)]] = v29(v277, v278, v64);
							end
						elseif (v85 <= 59) then
							if (v85 <= (57 + 0)) then
								v82[v84[9 - 7]] = #v82[v84[8 - 5]];
							elseif ((4623 >= 2787) and (v85 > 58)) then
								if ((2234 >= 1230) and not v82[v84[2]]) then
									v76 = v76 + (1837 - (1045 + 791));
								else
									v76 = v84[1138 - (832 + 303)];
								end
							else
								local v281 = v84[4 - 2];
								v82[v281](v82[v281 + (1 - 0)]);
							end
						elseif ((v85 <= (565 - (351 + 154))) or (343 == 1786)) then
							do
								return;
							end
						elseif (v85 > (1635 - (1281 + 293))) then
							local v282 = v84[268 - (28 + 238)];
							local v283, v284 = v75(v82[v282](v13(v82, v282 + (2 - 1), v84[1562 - ((2327 - (88 + 858)) + 178)])));
							v77 = (v284 + v282) - 1;
							local v285 = 0 + 0;
							for v388 = v282, v77 do
								local v389 = 0 + 0;
								while true do
									if (v389 == (0 + 0)) then
										v285 = v285 + (3 - (1 + 1));
										v82[v388] = v283[v285];
										break;
									end
								end
							end
						else
							v76 = v84[2 + 1];
						end
					elseif (v85 <= (538 - (381 + 89))) then
						if (v85 <= (49 + 9 + 7)) then
							if (v85 <= (43 + 20)) then
								local v164 = 0;
								local v165;
								local v166;
								local v167;
								local v168;
								while true do
									if (v164 == (0 - 0)) then
										v165 = v84[1158 - (1074 + 82)];
										v166, v167 = v75(v82[v165](v82[v165 + ((1 + 0) - 0)]));
										v164 = 1;
									end
									if (v164 == (1785 - (214 + (2359 - (766 + 23))))) then
										v77 = (v167 + v165) - ((7187 - 5731) - (990 + 465));
										v168 = 0 + 0;
										v164 = 2;
									end
									if ((2570 > 2409) and (v164 == (1 + 1))) then
										for v403 = v165, v77 do
											local v404 = (0 - 0) + 0;
											while true do
												if ((v404 == 0) or (2609 >= 3234)) then
													v168 = v168 + 1;
													v82[v403] = v166[v168];
													break;
												end
											end
										end
										break;
									end
								end
							elseif (v85 == (251 - (492 - 305))) then
								local v287 = v84[1728 - (1668 + 58)];
								v82[v287](v13(v82, v287 + (627 - (512 + 114)), v84[7 - 4]));
							else
								local v288 = v84[3 - 1];
								local v289 = v82[v288];
								local v290 = v82[v288 + 2];
								if (v290 > (0 - 0)) then
									if (v289 > v82[v288 + 1 + 0]) then
										v76 = v84[3];
									else
										v82[v288 + 1 + 2] = v289;
									end
								elseif ((v289 < v82[v288 + 1 + 0]) or (3033 >= 4031)) then
									v76 = v84[10 - 7];
								else
									v82[v288 + 3] = v289;
								end
							end
						elseif (v85 <= (2060 - (109 + (6397 - 4512)))) then
							v82[v84[1471 - (1269 + 200)]]();
						elseif ((v85 == (128 - 61)) or (1401 == 4668)) then
							local v291 = 815 - (98 + 717);
							local v292;
							local v293;
							local v294;
							local v295;
							while true do
								if ((2776 >= 1321) and (1 == v291)) then
									v77 = (v294 + v292) - 1;
									v295 = (1899 - (1036 + 37)) - (802 + 24);
									v291 = 2;
								end
								if (v291 == ((0 + 0) - 0)) then
									v292 = v84[2];
									v293, v294 = v75(v82[v292](v13(v82, v292 + (1 - 0), v77)));
									v291 = 1 + 0;
								end
								if (v291 == 2) then
									for v469 = v292, v77 do
										local v470 = 0 + 0;
										while true do
											if (v470 == (0 + 0)) then
												v295 = v295 + 1 + 0;
												v82[v469] = v293[v295];
												break;
											end
										end
									end
									break;
								end
							end
						else
							v82[v84[5 - 3]] = v64[v84[9 - 6]];
						end
					elseif (v85 <= (26 + 45)) then
						if ((v85 <= (29 + 40)) or (487 > 2303)) then
							local v169 = v73[v84[3 + 0]];
							local v170;
							local v171 = {};
							v170 = v10({}, {__index=function(v186, v187)
								local v188 = 0;
								local v189;
								while true do
									if ((v188 == (0 + 0)) or (4503 == 3462)) then
										v189 = v171[v187];
										return v189[1 + 0][v189[1435 - (797 + 636)]];
									end
								end
							end,__newindex=function(v190, v191, v192)
								local v193 = v171[v191];
								v193[4 - 3][v193[1621 - (1427 + 192)]] = v192;
							end});
							for v195 = 1, v84[2 + 2] do
								local v196 = 0 - 0;
								local v197;
								while true do
									if ((1 + 0 + 0) == v196) then
										if (v197[1] == 12) then
											v171[v195 - (1 + 0)] = {v82,v197[1279 - (316 + 960)]};
										else
											v171[v195 - (1 + 0)] = {v63,v197[11 - 8]};
										end
										v81[#v81 + (552 - (83 + 468))] = v171;
										break;
									end
									if (v196 == (1806 - (1202 + 604))) then
										v76 = v76 + (4 - 3);
										v197 = v72[v76];
										v196 = 1 - 0;
									end
								end
							end
							v82[v84[5 - 3]] = v29(v169, v170, v64);
						elseif ((553 <= 1543) and (v85 > (395 - (45 + 280)))) then
							if (v82[v84[2 + 0]] == v82[v84[4]]) then
								v76 = v76 + (1685 - (1466 + 218)) + 0 + 0;
							else
								v76 = v84[2 + 1];
							end
						else
							v82[v84[(1150 - (556 + 592)) + 0]] = v82[v84[1 + 2]] % v82[v84[6 - 2]];
						end
					elseif (v85 <= (1984 - (340 + 1571))) then
						if (v85 > (29 + 43)) then
							local v299 = 1772 - (1733 + 39);
							local v300;
							while true do
								if (v299 == (0 - 0)) then
									v300 = v84[1 + 1];
									v82[v300] = v82[v300](v13(v82, v300 + (1035 - (125 + 909)), v77));
									break;
								end
							end
						else
							local v301 = 1948 - ((1904 - (329 + 479)) + 852);
							local v302;
							while true do
								if ((2015 == 2015) and (v301 == ((854 - (174 + 680)) + 0))) then
									v302 = v84[2 - (0 - 0)];
									v82[v302](v13(v82, v302 + (1 - 0) + 0, v77));
									break;
								end
							end
						end
					elseif (v85 > 74) then
						local v303 = v84[514 - (409 + 103)];
						v82[v303] = v82[v303]();
					else
						local v305 = 0;
						local v306;
						local v307;
						while true do
							if (v305 == 1) then
								v82[v306 + (237 - (46 + 190))] = v307;
								v82[v306] = v307[v84[99 - (51 + 44)]];
								break;
							end
							if (v305 == 0) then
								v306 = v84[2];
								v307 = v82[v84[1 + 0 + (741 - (396 + 343))]];
								v305 = 1;
							end
						end
					end
				elseif ((v85 <= (1405 - (1114 + 203))) or (4241 <= 2332)) then
					if (v85 <= (807 - (228 + 498))) then
						if (v85 <= 78) then
							if ((v85 <= (17 + 59)) or (2364 < 1157)) then
								v82[v84[2 + 0]] = {};
							elseif (v85 == 77) then
								v82[v84[665 - (174 + 489)]][v82[v84[7 - 4]]] = v82[v84[1909 - (830 + 1075)]];
							else
								v82[v84[526 - (303 + 221)]][v84[3]] = v84[1273 - (231 + 1038)];
							end
						elseif (v85 <= (66 + 13)) then
							v82[v84[1164 - (171 + 991)]] = v84[3] ~= (0 - (0 + 0));
						elseif ((v85 > 80) or (1167 > 1278)) then
							v82[v84[2]] = v64[v84[7 - 4]];
						else
							v82[v84[4 - 2]] = v82[v84[3 + 0]][v84[13 - 9]];
						end
					elseif (v85 <= (1561 - (29 + 1448))) then
						if (v85 <= (236 - 154)) then
							local v175 = v84[(1391 - (135 + 1254)) - 0];
							local v176 = v84[12 - 8];
							local v177 = v175 + (1250 - (111 + 1137));
							local v178 = {v82[v175](v82[v175 + (2 - 1)], v82[v177])};
							for v198 = 1 + 0, v176 do
								v82[v177 + v198] = v178[v198];
							end
							local v179 = v178[524 - (282 + 141 + 100)];
							if v179 then
								v82[v177] = v179;
								v76 = v84[1 + 2];
							else
								v76 = v76 + 1;
							end
						elseif ((v85 > (229 - (1673 - (389 + 1138)))) or (1145 <= 1082)) then
							local v318 = 0;
							local v319;
							while true do
								if (v318 == (0 + 0)) then
									v319 = v84[2];
									do
										return v13(v82, v319, v77);
									end
									break;
								end
							end
						else
							v82[v84[773 - (326 + 445)]] = v84[3];
						end
					elseif (v85 <= (375 - 289)) then
						if (v85 == (659 - (102 + 472))) then
							local v322 = 0 - 0;
							local v323;
							local v324;
							while true do
								if ((v322 == ((0 + 0) - 0)) or (3105 == 4881)) then
									v323 = v84[2];
									v324 = v82[v84[714 - (530 + 181)]];
									v322 = 882 - (341 + 273 + 267);
								end
								if (v322 == (33 - (19 + 13))) then
									v82[v323 + ((1 + 0) - 0)] = v324;
									v82[v323] = v324[v82[v84[4]]];
									break;
								end
							end
						else
							v82[v84[4 - 2]] = v82[v84[8 - 5]] % v84[4];
						end
					elseif (v85 == (23 + 64)) then
						local v326 = (1545 - (320 + 1225)) - 0;
						local v327;
						local v328;
						local v329;
						while true do
							if (v326 == (0 - 0)) then
								v327 = v84[1814 - ((2301 - 1008) + 519)];
								v328 = {v82[v327](v13(v82, v327 + (1 - 0), v77))};
								v326 = 2 - 1;
							end
							if ((v326 == ((1 + 0) - 0)) or (1887 > 4878)) then
								v329 = 0 - 0;
								for v473 = v327, v84[9 - 5] do
									local v474 = 0 + 0;
									while true do
										if (v474 == 0) then
											v329 = v329 + 1 + 0;
											v82[v473] = v328[v329];
											break;
										end
									end
								end
								break;
							end
						end
					elseif v82[v84[2]] then
						v76 = v76 + (2 - 1);
					else
						v76 = v84[1 + 2];
					end
				elseif (v85 <= 94) then
					if (v85 <= 91) then
						if (v85 <= (30 + 59)) then
							v82[v84[2 + 0]] = v84[1099 - (709 + 387)] ~= (1858 - (673 + (2649 - (157 + 1307))));
						elseif ((v85 == 90) or (4087 > 4116)) then
							v82[v84[5 - (1862 - (821 + 1038))]] = v63[v84[9 - 6]];
						elseif (v82[v84[2]] == v84[4]) then
							v76 = v76 + 1;
						else
							v76 = v84[4 - 1];
						end
					elseif (v85 <= ((164 - 98) + 3 + 23)) then
						if ((1106 <= 1266) and (v84[2] == v82[v84[(4 - 1) + 1]])) then
							v76 = v76 + (1 - 0);
						else
							v76 = v84[1 + 2];
						end
					elseif ((3155 < 4650) and (v85 == (185 - 92))) then
						local v333 = (0 + 0) - 0;
						local v334;
						while true do
							if (v333 == (1880 - (446 + 1434))) then
								v334 = v84[1285 - (1040 + 243)];
								do
									return v13(v82, v334, v334 + v84[3]);
								end
								break;
							end
						end
					else
						local v335 = v84[3];
						local v336 = v82[v335];
						for v391 = v335 + (2 - 1), v84[1851 - (559 + 1288)] do
							v336 = v336 .. v82[v391];
						end
						v82[v84[2]] = v336;
					end
				elseif ((3774 >= 1839) and (v85 <= (2028 - (609 + 1322)))) then
					if ((2811 == 2811) and (v85 <= (549 - (13 + 441)))) then
						local v181 = 0;
						local v182;
						while true do
							if ((2146 > 1122) and (v181 == 0)) then
								v182 = v84[7 - 5];
								v82[v182](v13(v82, v182 + (2 - 1), v77));
								break;
							end
						end
					elseif ((v85 == (478 - 382)) or (56 == 3616)) then
						local v338 = v84[1 + 1];
						do
							return v82[v338](v13(v82, v338 + 1, v84[10 - 7]));
						end
					else
						v76 = v84[(4 - 2) + 1];
					end
				elseif (v85 <= (44 + 55)) then
					if (v85 == 98) then
						local v340 = 0 - 0;
						local v341;
						while true do
							if (v340 == (0 + 0)) then
								v341 = v84[3 - 1];
								v82[v341] = v82[v341]();
								break;
							end
						end
					else
						v82[v84[2 + 0]] = v29(v73[v84[3]], nil, v64);
					end
				elseif (v85 == (56 + 44)) then
					local v343 = v84[2 + 0];
					v82[v343] = v82[v343](v82[v343 + 1 + 0]);
				else
					local v345 = 0 + (1026 - (834 + 192));
					local v346;
					while true do
						if (v345 == (433 - (153 + 280))) then
							v346 = v84[5 - 3];
							do
								return v13(v82, v346, v77);
							end
							break;
						end
					end
				end
				v76 = v76 + 1 + 0;
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
