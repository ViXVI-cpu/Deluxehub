--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v88 = 0;
			local v89;
			while true do
				if (v88 == 0) then
					v89 = v2(v0(v30, 16));
					if v19 then
						local v129 = v5(v89, v19);
						v19 = nil;
						return v129;
					else
						return v89;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v90 = (v31 / ((5 - 3) ^ (v32 - ((119 - (32 + 85)) - 1)))) % ((3 - 1) ^ (((v33 - (2 - 1)) - (v32 - 1)) + (620 - (555 + 63 + 1))));
			return v90 - (v90 % (1 + 0));
		else
			local v91 = 0 + 0;
			local v92;
			while true do
				if (v91 == (0 - 0)) then
					v92 = (933 - (857 + 74)) ^ (v32 - (569 - (367 + 201)));
					return (((v31 % (v92 + v92)) >= v92) and ((2228 - (892 + 65)) - (226 + (2490 - 1446)))) or (927 - (214 + 713));
				end
			end
		end
	end
	local function v21()
		local v34 = 0 - 0;
		local v35;
		while true do
			if (v34 == (1 - 0)) then
				return v35;
			end
			if (v34 == (350 - (87 + 263))) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (181 - (50 + 17 + 113));
				v34 = 1;
			end
		end
	end
	local function v22()
		local v36 = 0 - 0;
		local v37;
		local v38;
		while true do
			if (v36 == (1 + (997 - (915 + 82)))) then
				return (v38 * (1017 - 761)) + v37;
			end
			if (v36 == (952 - (802 + 150))) then
				v37, v38 = v1(v16, v18, v18 + (5 - 3));
				v18 = v18 + (3 - 1);
				v36 = 1 + 0;
			end
		end
	end
	local function v23()
		local v39 = 0 - 0;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v39 == (1 + 0)) then
				return (v43 * 16777216) + (v42 * 65536) + (v41 * 256) + v40;
			end
			if (v39 == (0 - 0)) then
				v40, v41, v42, v43 = v1(v16, v18, v18 + (1190 - (1069 + 118)));
				v18 = v18 + (8 - (1 + 3));
				v39 = 1 - 0;
			end
		end
	end
	local function v24()
		local v44 = 0 - (0 - 0);
		local v45;
		local v46;
		local v47;
		local v48;
		local v49;
		local v50;
		while true do
			if (v44 == (3 + 0)) then
				if (v49 == (791 - ((1443 - 1075) + 4 + 419))) then
					if (v48 == (0 - 0)) then
						return v50 * (18 - (10 + (1421 - (447 + 966))));
					else
						v49 = 3 - 2;
						v47 = 0 - 0;
					end
				elseif (v49 == (2489 - (416 + 26))) then
					return ((v48 == (0 - 0)) and (v50 * ((886 - (261 + 624)) / ((0 - 0) + 0)))) or (v50 * NaN);
				end
				return v8(v50, v49 - (1809 - 786)) * (v47 + (v48 / ((1425 - (495 + 135 + 793)) ^ (175 - 123))));
			end
			if (v44 == (439 - (145 + 293))) then
				v47 = (1486 - (87 + 968)) - (44 + 386);
				v48 = (v20(v46, (4 - 3) + 0, 68 - (44 + 4)) * ((1749 - (760 + 987)) ^ (1518 - ((2815 - (1703 + 114)) + 488)))) + v45;
				v44 = 1 + 1;
			end
			if ((766 - (745 + 21)) == v44) then
				v45 = v23();
				v46 = v23();
				v44 = 1;
			end
			if ((2 + 0) == v44) then
				v49 = v20(v46, 793 - (201 + 571), 1169 - (116 + 1022));
				v50 = ((v20(v46, 12 + 20) == (4 - 3)) and -(702 - (376 + 325))) or 1;
				v44 = 7 - 4;
			end
		end
	end
	local function v25(v51)
		local v52 = 0 - 0;
		local v53;
		local v54;
		while true do
			if (v52 == 2) then
				v54 = {};
				for v120 = 1 - 0, #v53 do
					v54[v120] = v2(v1(v3(v53, v120, v120)));
				end
				v52 = 1183 - (1123 + 57);
			end
			if ((2 - 1) == v52) then
				v53 = v3(v16, v18, (v18 + v51) - ((1 - 0) + 0));
				v18 = v18 + v51;
				v52 = 4 - 2;
			end
			if ((14 - (9 + 5)) == v52) then
				v53 = nil;
				if not v51 then
					v51 = v23();
					if (v51 == (376 - (85 + 274 + 17))) then
						return "";
					end
				end
				v52 = 1266 - (243 + 1022);
			end
			if (v52 == (1 + 2)) then
				return v6(v54);
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v55 = (function()
			return function(v93, v94, v95, v96, v97, v98, v99, v100)
				local v93 = (function()
					return 0 + 0;
				end)();
				local v94 = (function()
					return;
				end)();
				local v96 = (function()
					return;
				end)();
				while true do
					if (v93 == 0) then
						local v126 = (function()
							return 0;
						end)();
						local v127 = (function()
							return;
						end)();
						while true do
							if (v126 ~= (0 + 0)) then
							else
								v127 = (function()
									return 0;
								end)();
								while true do
									if (v127 ~= (0 - 0)) then
									else
										v94 = (function()
											return v95();
										end)();
										v96 = (function()
											return nil;
										end)();
										v127 = (function()
											return 1252 - (721 + 530);
										end)();
									end
									if (v127 ~= 1) then
									else
										v93 = (function()
											return 1;
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					if (v93 ~= 1) then
					else
						if (v94 == 1) then
							v96 = (function()
								return v95() ~= 0;
							end)();
						elseif (v94 == 2) then
							v96 = (function()
								return v97();
							end)();
						elseif (v94 == 3) then
							v96 = (function()
								return v98();
							end)();
						end
						v99[v100] = (function()
							return v96;
						end)();
						break;
					end
				end
				return v93, v94, v95, v96, v97, v98, v99, v100;
			end;
		end)();
		local v56 = (function()
			return function(v101, v102, v103, v104, v105, v106, v107, v108, v109)
				local v110 = (function()
					return 1271 - (945 + 326);
				end)();
				local v101 = (function()
					return;
				end)();
				local v102 = (function()
					return;
				end)();
				while true do
					local v119 = (function()
						return 0;
					end)();
					while true do
						if (v119 ~= (0 - 0)) then
						else
							if ((1 + 0) == v110) then
								local v130 = (function()
									return 700 - (271 + 429);
								end)();
								while true do
									if (v130 ~= (0 + 0)) then
									else
										local v135 = (function()
											return 1500 - (1408 + 92);
										end)();
										while true do
											if (v135 ~= (1086 - (461 + 625))) then
											else
												while true do
													if (v101 == (1288 - (993 + 295))) then
														v102 = (function()
															return v103();
														end)();
														if (v104(v102, 1, 1) == 0) then
															local v416 = (function()
																return 0;
															end)();
															local v417 = (function()
																return;
															end)();
															local v418 = (function()
																return;
															end)();
															local v419 = (function()
																return;
															end)();
															while true do
																if (v416 == 0) then
																	local v489 = (function()
																		return 0 + 0;
																	end)();
																	local v490 = (function()
																		return;
																	end)();
																	while true do
																		if ((1171 - (418 + 753)) ~= v489) then
																		else
																			v490 = (function()
																				return 0;
																			end)();
																			while true do
																				if (v490 ~= 0) then
																				else
																					v417 = (function()
																						return v104(v102, 1 + 1, 3);
																					end)();
																					v418 = (function()
																						return v104(v102, 4, 1 + 5);
																					end)();
																					v490 = (function()
																						return 1 + 0;
																					end)();
																				end
																				if (v490 == 1) then
																					v416 = (function()
																						return 1;
																					end)();
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (2 == v416) then
																	if (v104(v418, 1, 1) ~= 1) then
																	else
																		v419[1 + 1] = (function()
																			return v107[v419[2]];
																		end)();
																	end
																	if (v104(v418, 531 - (406 + 123), 2) == 1) then
																		v419[3] = (function()
																			return v107[v419[3]];
																		end)();
																	end
																	v416 = (function()
																		return 1772 - (1749 + 20);
																	end)();
																end
																if (v416 == (1 + 0)) then
																	local v491 = (function()
																		return 1322 - (1249 + 73);
																	end)();
																	while true do
																		if (v491 ~= 0) then
																		else
																			v419 = (function()
																				return {v105(),v105(),nil,nil};
																			end)();
																			if (v417 == (1145 - (466 + 679))) then
																				local v521 = (function()
																					return 0 - 0;
																				end)();
																				local v522 = (function()
																					return;
																				end)();
																				while true do
																					if (v521 == (0 - 0)) then
																						v522 = (function()
																							return 1900 - (106 + 1794);
																						end)();
																						while true do
																							if ((0 + 0) ~= v522) then
																							else
																								v419[3] = (function()
																									return v105();
																								end)();
																								v419[4] = (function()
																									return v105();
																								end)();
																								break;
																							end
																						end
																						break;
																					end
																				end
																			elseif (v417 == 1) then
																				v419[3] = (function()
																					return v106();
																				end)();
																			elseif (v417 == 2) then
																				v419[3] = (function()
																					return v106() - ((1 + 1) ^ (46 - 30));
																				end)();
																			elseif (v417 == 3) then
																				local v527 = (function()
																					return 0;
																				end)();
																				local v528 = (function()
																					return;
																				end)();
																				while true do
																					if (v527 == (0 - 0)) then
																						v528 = (function()
																							return 0;
																						end)();
																						while true do
																							if (v528 ~= 0) then
																							else
																								v419[3] = (function()
																									return v106() - (2 ^ (130 - (4 + 110)));
																								end)();
																								v419[4] = (function()
																									return v105();
																								end)();
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v491 = (function()
																				return 1;
																			end)();
																		end
																		if (v491 == 1) then
																			v416 = (function()
																				return 586 - (57 + 527);
																			end)();
																			break;
																		end
																	end
																end
																if (v416 == 3) then
																	if (v104(v418, 3, 3) ~= 1) then
																	else
																		v419[4] = (function()
																			return v107[v419[4]];
																		end)();
																	end
																	v108[v109] = (function()
																		return v419;
																	end)();
																	break;
																end
															end
														end
														break;
													end
												end
												return v101, v102, v103, v104, v105, v106, v107, v108, v109;
											end
										end
									end
								end
							end
							if (v110 ~= (1427 - (41 + 1386))) then
							else
								local v131 = (function()
									return 0;
								end)();
								local v132 = (function()
									return;
								end)();
								while true do
									if (v131 ~= 0) then
									else
										v132 = (function()
											return 0;
										end)();
										while true do
											if (v132 ~= (103 - (17 + 86))) then
											else
												v101 = (function()
													return 0;
												end)();
												v102 = (function()
													return nil;
												end)();
												v132 = (function()
													return 1 + 0;
												end)();
											end
											if (v132 == (1 - 0)) then
												v110 = (function()
													return 2 - 1;
												end)();
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
			end;
		end)();
		local v57 = (function()
			return function(v111, v112, v113)
				local v114 = (function()
					return 0;
				end)();
				local v115 = (function()
					return;
				end)();
				while true do
					if (v114 == (166 - (122 + 44))) then
						v115 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v115 ~= 0) then
							else
								local v133 = (function()
									return 0 - 0;
								end)();
								local v134 = (function()
									return;
								end)();
								while true do
									if (v133 ~= 0) then
									else
										v134 = (function()
											return 0 + 0;
										end)();
										while true do
											if (v134 == 0) then
												local v136 = (function()
													return 0 + 0;
												end)();
												while true do
													if (v136 == 0) then
														v111[v112 - 2] = (function()
															return v113();
														end)();
														return v111, v112, v113;
													end
												end
											end
										end
										break;
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v58 = (function()
			return {};
		end)();
		local v59 = (function()
			return {};
		end)();
		local v60 = (function()
			return {};
		end)();
		local v61 = (function()
			return {v58,v59,nil,v60};
		end)();
		local v62 = (function()
			return v23();
		end)();
		local v63 = (function()
			return {};
		end)();
		for v71 = 1, v62 do
			FlatIdent_946F, Type, v21, Cons, v24, v25, v63, v71 = (function()
				return v55(FlatIdent_946F, Type, v21, Cons, v24, v25, v63, v71);
			end)();
		end
		v61[3] = (function()
			return v21();
		end)();
		for v72 = 1, v23() do
			FlatIdent_2A9F7, Descriptor, v21, v20, v22, v23, v63, v58, v72 = (function()
				return v56(FlatIdent_2A9F7, Descriptor, v21, v20, v22, v23, v63, v58, v72);
			end)();
		end
		for v73 = 1, v23() do
			v59, v73, v28 = (function()
				return v57(v59, v73, v28);
			end)();
		end
		return v61;
	end
	local function v29(v65, v66, v67)
		local v68 = v65[66 - (30 + 35)];
		local v69 = v65[2 + 0];
		local v70 = v65[3];
		return function(...)
			local v74 = v68;
			local v75 = v69;
			local v76 = v70;
			local v77 = v27;
			local v78 = (2157 - (503 + 396)) - (1043 + 214);
			local v79 = -1;
			local v80 = {};
			local v81 = {...};
			local v82 = v12("#", ...) - (1213 - (323 + 889));
			local v83 = {};
			local v84 = {};
			for v116 = 0, v82 do
				if ((v116 >= v76) or (1761 >= 2462)) then
					v80[v116 - v76] = v81[v116 + 1];
				else
					v84[v116] = v81[v116 + (2 - 1)];
				end
			end
			local v85 = (v82 - v76) + (581 - (361 + 219));
			local v86;
			local v87;
			while true do
				v86 = v74[v78];
				v87 = v86[321 - ((234 - (92 + 89)) + 267)];
				if (v87 <= (12 + 38)) then
					if (v87 <= (437 - (15 + 398))) then
						if (v87 <= (993 - (18 + 964))) then
							if (v87 <= (18 - 13)) then
								if ((4551 > 2328) and (v87 <= 2)) then
									if ((3825 >= 467) and (v87 <= (0 + 0))) then
										v84[v86[2 + (0 - 0)]] = v84[v86[3]][v84[v86[4]]];
									elseif (v87 > (851 - (20 + 830))) then
										v84[v86[2]] = v86[2 + 1 + 0];
									else
										local v217 = v86[128 - (116 + 6 + 4)];
										local v218 = v86[1 + 3];
										local v219 = v217 + (740 - (542 + 196));
										local v220 = {v84[v217](v84[v217 + 1], v84[v219])};
										for v345 = 1 - 0, v218 do
											v84[v219 + v345] = v220[v345];
										end
										local v221 = v220[1 + 0];
										if v221 then
											local v383 = 0;
											while true do
												if (v383 == (0 + 0)) then
													v84[v219] = v221;
													v78 = v86[2 + 1];
													break;
												end
											end
										else
											v78 = v78 + 1;
										end
									end
								elseif (v87 <= (7 - 4)) then
									if ((v84[v86[4 - (7 - 5)]] == v86[1555 - (1126 + 59 + 366)]) or (2890 == 557)) then
										v78 = v78 + 1;
									else
										v78 = v86[408 - ((268 - 150) + 287)];
									end
								elseif (v87 == ((14 + 1) - 11)) then
									if (v84[v86[1 + 1]] == v86[12 - 8]) then
										v78 = v78 + 1;
									else
										v78 = v86[1124 - (118 + 1003)];
									end
								else
									local v223 = v86[5 - 3];
									local v224 = v84[v223];
									local v225 = v84[v223 + (379 - (142 + 235))];
									if (v225 > (0 - 0)) then
										if ((v224 > v84[v223 + 1 + 0]) or (4770 == 2904)) then
											v78 = v86[1 + 2];
										else
											v84[v223 + (980 - (553 + 424))] = v224;
										end
									elseif ((v224 < v84[v223 + (1 - 0)]) or (3903 == 4536)) then
										v78 = v86[3 + 0];
									else
										v84[v223 + 3 + 0] = v224;
									end
								end
							elseif (v87 <= ((7 - 2) + 3)) then
								if (v87 <= (3 + 3)) then
									v84[v86[2]][v86[2 + 1]] = v86[8 - 4];
								elseif (v87 == (19 - 12)) then
									v84[v86[4 - 2]][v84[v86[(1245 - (485 + 759)) + 2]]] = v84[v86[4]];
								else
									v84[v86[2]] = v29(v75[v86[14 - 11]], nil, v67);
								end
							elseif (v87 <= ((1763 - 1001) - (239 + 514))) then
								v84[v86[2]] = v66[v86[2 + 1]];
							elseif (v87 > (1339 - (797 + 532))) then
								local v229 = 0 + 0;
								local v230;
								local v231;
								local v232;
								while true do
									if ((4093 <= 4845) and (v229 == (1 + 1))) then
										if (v231 > 0) then
											if (v232 <= v84[v230 + ((1191 - (442 + 747)) - 1)]) then
												local v493 = 0;
												while true do
													if ((1569 <= 3647) and (v493 == 0)) then
														v78 = v86[1205 - (373 + 829)];
														v84[v230 + (734 - (476 + 255))] = v232;
														break;
													end
												end
											end
										elseif ((v232 >= v84[v230 + (1131 - (369 + 761))]) or (4046 >= 4927)) then
											local v494 = 0 + (1135 - (832 + 303));
											while true do
												if (v494 == (0 - 0)) then
													v78 = v86[5 - 2];
													v84[v230 + (241 - (64 + 174))] = v232;
													break;
												end
											end
										end
										break;
									end
									if (v229 == ((947 - (88 + 858)) + 0)) then
										v232 = v84[v230] + v231;
										v84[v230] = v232;
										v229 = 2 - (0 + 0);
									end
									if (v229 == (336 - (144 + 159 + 33))) then
										v230 = v86[218 - (42 + 174)];
										v231 = v84[v230 + 2 + 0];
										v229 = 1 + 0 + 0;
									end
								end
							else
								local v233 = (789 - (766 + 23)) + 0;
								local v234;
								local v235;
								while true do
									if (v233 == (1505 - (363 + 1141))) then
										for v462 = 1, #v83 do
											local v463 = 1580 - (1183 + 397);
											local v464;
											while true do
												if ((4623 >= 2787) and (v463 == (0 - 0))) then
													v464 = v83[v462];
													for v510 = 0 + 0, #v464 do
														local v511 = v464[v510];
														local v512 = v511[1 + (0 - 0)];
														local v513 = v511[2];
														if ((2234 >= 1230) and (v512 == v84) and (v513 >= v234)) then
															v235[v513] = v512[v513];
															v511[1976 - ((2615 - 702) + 62)] = v235;
														end
													end
													break;
												end
											end
										end
										break;
									end
									if (v233 == 0) then
										v234 = v86[2];
										v235 = {};
										v233 = 1 + 0;
									end
								end
							end
						elseif (v87 <= (44 - 27)) then
							if (v87 <= (1947 - (565 + 1368))) then
								if (v87 <= 12) then
									local v143 = 0;
									local v144;
									local v145;
									while true do
										if (v143 == (0 - 0)) then
											v144 = v86[1663 - (1477 + 184)];
											v145 = v84[v86[(7 - 4) - 0]];
											v143 = 1 + 0;
										end
										if (v143 == ((2908 - 2051) - (564 + 292))) then
											v84[v144 + (1 - 0)] = v145;
											v84[v144] = v145[v86[11 - 7]];
											break;
										end
									end
								elseif (v87 == (317 - (244 + 60))) then
									v84[v86[1075 - (1036 + 37)]] = v84[v86[3 + 0]][v84[v86[480 - (41 + 435)]]];
								else
									local v238 = 1001 - (938 + 63);
									local v239;
									local v240;
									while true do
										if ((v238 == 1) or (343 == 1786)) then
											v84[v239 + 1 + 0] = v240;
											v84[v239] = v240[v84[v86[4]]];
											break;
										end
										if ((2570 > 2409) and (v238 == (1125 - (936 + 189)))) then
											v239 = v86[2];
											v240 = v84[v86[1 + 2]];
											v238 = 1614 - (1565 + 48);
										end
									end
								end
							elseif (v87 <= (10 + 4 + 1)) then
								local v146 = v75[v86[1141 - (782 + 356)]];
								local v147;
								local v148 = {};
								v147 = v10({}, {__index=function(v199, v200)
									local v201 = v148[v200];
									return v201[268 - (176 + 91)][v201[4 - 2]];
								end,__newindex=function(v202, v203, v204)
									local v205 = 0;
									local v206;
									while true do
										if ((v205 == (0 - 0)) or (2609 >= 3234)) then
											v206 = v148[v203];
											v206[1093 - (975 + 117)][v206[1877 - (157 + 1718)]] = v204;
											break;
										end
									end
								end});
								for v207 = 1, v86[4] do
									local v208 = 0 + 0;
									local v209;
									while true do
										if (v208 == 0) then
											v78 = v78 + (3 - (2 + 0));
											v209 = v74[v78];
											v208 = 3 - 2;
										end
										if (v208 == (1481 - (641 + 839))) then
											if ((v209[1019 - (697 + 321)] == (48 - (943 - (910 + 3)))) or (3033 >= 4031)) then
												v148[v207 - (1 - 0)] = {v84,v209[2 + 1]};
											else
												v148[v207 - (1 - 0)] = {v66,v209[3]};
											end
											v83[#v83 + (612 - (602 + 9))] = v148;
											break;
										end
									end
								end
								v84[v86[2]] = v29(v146, v147, v67);
							elseif ((v87 > (1205 - (449 + 740))) or (1401 == 4668)) then
								local v241 = v86[874 - (826 + 46)];
								v84[v241](v13(v84, v241 + 1, v79));
							else
								local v242 = 947 - (245 + 702);
								local v243;
								while true do
									if (v242 == (0 - 0)) then
										v243 = v86[1 + 1];
										v84[v243](v13(v84, v243 + (1899 - (260 + 1638)), v86[443 - (382 + 58)]));
										break;
									end
								end
							end
						elseif (v87 <= (64 - 44)) then
							if ((2776 >= 1321) and (v87 <= (15 + 3))) then
								v84[v86[3 - 1]] = v84[v86[8 - 5]];
							elseif ((v87 == (1224 - (902 + 303))) or (487 > 2303)) then
								local v244 = 0 - 0;
								local v245;
								while true do
									if (((0 - 0) == v244) or (4503 == 3462)) then
										v245 = v86[2];
										v84[v245] = v84[v245]();
										break;
									end
								end
							else
								v84[v86[1 + (1685 - (1466 + 218))]][v86[1693 - (1121 + 262 + 307)]] = v84[v86[218 - (22 + 192)]];
							end
						elseif ((553 <= 1543) and (v87 <= 22)) then
							if (v87 == 21) then
								local v248 = v86[2];
								local v249 = v84[v248];
								local v250 = v86[686 - (483 + 200)];
								for v353 = 1464 - (1404 + 59), v250 do
									v249[v353] = v84[v248 + v353];
								end
							else
								v84[v86[5 - 3]] = #v84[v86[3 - 0]];
							end
						elseif (v87 > (788 - (468 + 297))) then
							v84[v86[564 - ((1482 - (556 + 592)) + 228)]] = v66[v86[3]];
						else
							local v254 = v86[6 - 4];
							v84[v254] = v84[v254](v13(v84, v254 + (2 - 1), v79));
						end
					elseif (v87 <= (66 - 29)) then
						if (v87 <= (9 + 21)) then
							if ((2015 == 2015) and (v87 <= (263 - (141 + 95)))) then
								if (v87 <= (25 + 0)) then
									local v152 = v86[7 - 4];
									local v153 = v84[v152];
									for v210 = v152 + 1, v86[9 - (2 + 3)] do
										v153 = v153 .. v84[v210];
									end
									v84[v86[(809 - (329 + 479)) + (855 - (174 + 680))]] = v153;
								elseif (v87 == 26) then
									local v256 = v86[5 - 3];
									local v257 = {};
									for v356 = 1, #v83 do
										local v357 = 0 + 0;
										local v358;
										while true do
											if (v357 == 0) then
												v358 = v83[v356];
												for v481 = 0 + 0, #v358 do
													local v482 = v358[v481];
													local v483 = v482[1 - 0];
													local v484 = v482[2 + 0];
													if ((v483 == v84) and (v484 >= v256)) then
														v257[v484] = v483[v484];
														v482[164 - (92 + 71)] = v257;
													end
												end
												break;
											end
										end
									end
								else
									local v258 = 0 + 0;
									local v259;
									while true do
										if (v258 == (0 - 0)) then
											v259 = v86[767 - (574 + 191)];
											do
												return v84[v259](v13(v84, v259 + 1 + (0 - 0), v86[7 - 4]));
											end
											break;
										end
									end
								end
							elseif (v87 <= (15 + 13)) then
								v84[v86[2]] = v86[852 - ((526 - 272) + 595)];
							elseif (v87 > (155 - (55 + 71))) then
								do
									return;
								end
							else
								local v260 = v86[2 - 0];
								local v261 = v84[v260];
								for v359 = v260 + (1791 - (573 + 869 + 348)), v86[8 - (744 - (396 + 343))] do
									v7(v261, v84[v359]);
								end
							end
						elseif (v87 <= (3 + 30)) then
							if (v87 <= (3 + 28)) then
								local v157 = 0 - (1477 - (29 + 1448));
								local v158;
								local v159;
								local v160;
								local v161;
								while true do
									if (v157 == (939 - (714 + (1614 - (135 + 1254))))) then
										v158 = v86[5 - 3];
										v159, v160 = v77(v84[v158](v84[v158 + (1 - 0)]));
										v157 = 1 + 0;
									end
									if ((1 - 0) == v157) then
										v79 = (v160 + v158) - 1;
										v161 = 806 - (118 + 688);
										v157 = 2;
									end
									if (v157 == (50 - ((94 - 69) + 23))) then
										for v389 = v158, v79 do
											local v390 = 0 + 0;
											while true do
												if (((1886 - (927 + 959)) == v390) or (4241 <= 2332)) then
													v161 = v161 + 1;
													v84[v389] = v159[v161];
													break;
												end
											end
										end
										break;
									end
								end
							elseif (v87 == ((499 - 392) - 75)) then
								v84[v86[734 - (16 + 716)]][v86[5 - 2]] = v84[v86[101 - (11 + 86)]];
							else
								local v264 = 0 - 0;
								local v265;
								local v266;
								while true do
									if ((1 == v264) or (2364 < 1157)) then
										v84[v265 + (286 - (175 + 110))] = v266;
										v84[v265] = v266[v84[v86[4]]];
										break;
									end
									if ((v264 == (0 - 0)) or (1167 > 1278)) then
										v265 = v86[(6 + 3) - (1534 - (389 + 1138))];
										v266 = v84[v86[1799 - (503 + 1293)]];
										v264 = 2 - 1;
									end
								end
							end
						elseif (v87 <= (26 + 9)) then
							if (v87 > ((1669 - (102 + 472)) - (810 + 251))) then
								v84[v86[2 + 0]] = v67[v86[3 + 0]];
							else
								v84[v86[1 + 0 + 1]] = v84[v86[3 + 0]] + v86[537 - (43 + 490)];
							end
						elseif (v87 == (769 - (711 + 22))) then
							local v270 = v86[(7 + 0) - 5];
							v84[v270] = v84[v270]();
						else
							local v272 = 859 - (240 + 619);
							local v273;
							local v274;
							local v275;
							local v276;
							while true do
								if ((v272 == (1 + 0)) or (1145 <= 1082)) then
									v79 = (v275 + v273) - (1 - 0);
									v276 = 0 + 0;
									v272 = 1746 - (1344 + 400);
								end
								if (0 == v272) then
									v273 = v86[(1952 - (320 + 1225)) - ((453 - 198) + 150)];
									v274, v275 = v77(v84[v273](v84[v273 + 1 + 0]));
									v272 = 1 + 0;
								end
								if ((v272 == 2) or (3105 == 4881)) then
									for v468 = v273, v79 do
										local v469 = (0 + 0) - 0;
										while true do
											if (v469 == ((1464 - (157 + 1307)) - 0)) then
												v276 = v276 + (1740 - ((2263 - (821 + 1038)) + 1335));
												v84[v468] = v274[v276];
												break;
											end
										end
									end
									break;
								end
							end
						end
					elseif (v87 <= (449 - (183 + 223))) then
						if ((v87 <= (48 - 8)) or (1887 > 4878)) then
							if (v87 <= (26 + 12)) then
								v84[v86[2]] = v84[v86[2 + 1]] % v86[341 - (10 + 327)];
							elseif (v87 == (28 + 11)) then
								v84[v86[340 - (118 + 220)]] = v86[1 + 2] ~= (449 - (108 + 341));
							else
								local v278 = v86[1 + 1];
								local v279, v280 = v77(v84[v278](v13(v84, v278 + (4 - 3), v86[3])));
								v79 = (v280 + v278) - 1;
								local v281 = 1493 - (711 + 782);
								for v361 = v278, v79 do
									v281 = v281 + (1 - (0 - 0));
									v84[v361] = v279[v281];
								end
							end
						elseif ((v87 <= (510 - (270 + 199))) or (4087 > 4116)) then
							local v163 = v86[1 + 2];
							local v164 = v84[v163];
							for v211 = v163 + (1820 - (580 + 1239)), v86[11 - 7] do
								v164 = v164 .. v84[v211];
							end
							v84[v86[2 + 0]] = v164;
						elseif (v87 > (2 + 40)) then
							if (v84[v86[1 + 0 + (1 - 0)]] == v84[v86[9 - 5]]) then
								v78 = v78 + 1 + 0;
							else
								v78 = v86[1170 - (240 + 405 + 522)];
							end
						else
							for v364 = v86[1792 - (1010 + 780)], v86[7 - 4] do
								v84[v364] = nil;
							end
						end
					elseif (v87 <= (46 + 0)) then
						if (v87 <= (209 - 165)) then
							local v166 = v86[(1031 - (834 + 192)) - 3];
							v84[v166](v13(v84, v166 + 1, v86[1839 - (1045 + 791)]));
						elseif ((1106 <= 1266) and (v87 == (113 - 68))) then
							v84[v86[2 - 0]] = v84[v86[508 - (351 + 154)]] % v84[v86[1578 - (1281 + 293)]];
						else
							do
								return;
							end
						end
					elseif ((3155 < 4650) and (v87 <= (314 - (28 + 16 + 222)))) then
						if (v87 > 47) then
							v84[v86[1 + 1]] = v86[6 - (1 + 2)] + v84[v86[1563 - (1381 + 178)]];
						else
							for v366 = v86[2 + 0], v86[3] do
								v84[v366] = nil;
							end
						end
					elseif (v87 > ((61 - 21) + 9)) then
						local v284 = 0 + (304 - (300 + 4));
						local v285;
						while true do
							if (v284 == (0 - 0)) then
								v285 = v86[2 + 0];
								do
									return v13(v84, v285, v79);
								end
								break;
							end
						end
					elseif (v86[472 - (381 + 89)] == v84[v86[4 + 0]]) then
						v78 = v78 + 1 + 0;
					else
						v78 = v86[4 - 1];
					end
				elseif (v87 <= 75) then
					if (v87 <= (1218 - (287 + 787 + 82))) then
						if (v87 <= (122 - 66)) then
							if (v87 <= 53) then
								if ((3774 >= 1839) and (v87 <= (1835 - (214 + 1570)))) then
									local v167 = v86[1457 - (990 + 465)];
									local v168 = v86[2 + 2];
									local v169 = v167 + 1 + 1;
									local v170 = {v84[v167](v84[v167 + (3 - 2)], v84[v169])};
									for v212 = 1727 - (1668 + 58), v168 do
										v84[v169 + v212] = v170[v212];
									end
									local v171 = v170[627 - (512 + (298 - 184))];
									if ((2811 == 2811) and v171) then
										local v286 = (362 - (112 + 250)) - 0;
										while true do
											if (v286 == (0 - 0)) then
												v84[v169] = v171;
												v78 = v86[10 - 7];
												break;
											end
										end
									else
										v78 = v78 + 1 + 0;
									end
								elseif (v87 > (10 + 42)) then
									v84[v86[1 + 1 + 0]] = v84[v86[10 - 7]] % v86[1998 - (109 + (4722 - 2837))];
								else
									v84[v86[(843 + 628) - (1269 + 200)]] = v67[v86[(3 + 2) - 2]];
								end
							elseif (v87 <= ((650 + 219) - (98 + 356 + 361))) then
								v84[v86[828 - (802 + 24)]] = v84[v86[3]][v86[6 - (2 + 0)]];
							elseif (v87 == (69 - 14)) then
								if (v86[1 + 1] == v84[v86[4 + 0]]) then
									v78 = v78 + 1 + 0;
								else
									v78 = v86[1 + 2];
								end
							else
								local v290 = v86[5 - 3];
								local v291 = {v84[v290](v13(v84, v290 + 1 + 0, v79))};
								local v292 = 0 + 0;
								for v368 = v290, v86[4 + 0] do
									local v369 = 0 + 0;
									while true do
										if (v369 == (0 + 0)) then
											v292 = v292 + (1434 - (797 + 636));
											v84[v368] = v291[v292];
											break;
										end
									end
								end
							end
						elseif (v87 <= (286 - 227)) then
							if (v87 <= (1676 - (1427 + (427 - 235)))) then
								v84[v86[2]] = v84[v86[2 + 1]] - v84[v86[4]];
							elseif ((2146 > 1122) and (v87 == (134 - 76))) then
								v84[v86[2 + 0]] = v84[v86[2 + 1]] - v84[v86[330 - (192 + 134)]];
							elseif v84[v86[1278 - (316 + 960)]] then
								v78 = v78 + 1;
							else
								v78 = v86[885 - (244 + 638)];
							end
						elseif ((v87 <= 60) or (56 == 3616)) then
							local v175 = 0 + 0;
							local v176;
							local v177;
							local v178;
							local v179;
							while true do
								if (0 == v175) then
									v176 = v86[2];
									v177, v178 = v77(v84[v176](v13(v84, v176 + 1 + 0, v86[3])));
									v175 = 1 + 0;
								end
								if (v175 == 2) then
									for v395 = v176, v79 do
										v179 = v179 + (3 - 2);
										v84[v395] = v177[v179];
									end
									break;
								end
								if ((552 - (83 + 468)) == v175) then
									v79 = (v178 + v176) - (1807 - (1202 + 604));
									v179 = 0 - 0;
									v175 = 2 - 0;
								end
							end
						elseif ((v87 == (168 - (800 - (627 + 66)))) or (2421 < 622)) then
							local v294 = 325 - (45 + 280);
							local v295;
							while true do
								if ((0 + 0) == v294) then
									v295 = v86[2];
									v84[v295] = v84[v295](v84[v295 + 1 + 0]);
									break;
								end
							end
						else
							v84[v86[1 + 1]]();
						end
					elseif (v87 <= (38 + 30)) then
						if (v87 <= (12 + 53)) then
							if ((1009 <= 1130) and (v87 <= (116 - 53))) then
								do
									return v84[v86[1913 - (340 + 1571)]];
								end
							elseif ((2758 < 2980) and (v87 > 64)) then
								v84[v86[1 + 1]]();
							else
								local v296 = v86[1774 - (1733 + 39)];
								local v297 = {v84[v296](v13(v84, v296 + (1035 - (125 + 909)), v79))};
								local v298 = (2550 - (512 + 90)) - (1096 + 852);
								for v371 = v296, v86[2 + (1908 - (1665 + 241))] do
									v298 = v298 + 1;
									v84[v371] = v297[v298];
								end
							end
						elseif (v87 <= (93 - 27)) then
							v84[v86[2]] = v84[v86[3 + 0]][v86[4]];
						elseif ((v87 == (579 - (409 + 103))) or (86 >= 3626)) then
							v84[v86[238 - (46 + 190)]] = {};
						else
							local v300 = v86[97 - (51 + 44)];
							v84[v300] = v84[v300](v84[v300 + 1]);
						end
					elseif (v87 <= (21 + 50)) then
						if (v87 <= ((2103 - (373 + 344)) - (1114 + 203))) then
							local v182 = 726 - (228 + 498);
							local v183;
							while true do
								if (v182 == (0 + 0)) then
									v183 = v86[2 + 0];
									v84[v183] = v84[v183](v13(v84, v183 + (664 - (174 + 489)), v86[7 - 4]));
									break;
								end
							end
						elseif (v87 == (1975 - (830 + 1075))) then
							local v302 = 0;
							local v303;
							while true do
								if (v302 == (524 - (303 + 221))) then
									v303 = v86[1271 - (231 + 1038)];
									do
										return v13(v84, v303, v303 + v86[3 + 0]);
									end
									break;
								end
							end
						elseif not v84[v86[1164 - (78 + 93 + 991)]] then
							v78 = v78 + (4 - 3);
						else
							v78 = v86[3];
						end
					elseif (v87 <= (195 - 122)) then
						if ((2395 == 2395) and (v87 > ((48 + 131) - 107))) then
							v84[v86[2 + 0]][v84[v86[10 - 7]]] = v84[v86[11 - 7]];
						else
							local v306 = v86[2 - 0];
							v84[v306](v84[v306 + (3 - 2)]);
						end
					elseif ((3780 > 2709) and (v87 == (1322 - (111 + (2999 - 1862))))) then
						v78 = v86[3];
					else
						v84[v86[2 - 0]] = v84[v86[161 - (91 + 67)]];
					end
				elseif ((v87 <= (261 - 173)) or (237 >= 2273)) then
					if ((v87 <= (21 + 60)) or (2040 <= 703)) then
						if (v87 <= 78) then
							if ((3279 <= 3967) and (v87 <= (599 - (423 + 100)))) then
								local v184 = 0 + 0;
								local v185;
								local v186;
								local v187;
								local v188;
								while true do
									if ((v184 == 1) or (1988 == 877)) then
										v79 = (v187 + v185) - (2 - 1);
										v188 = 0 + 0;
										v184 = 2;
									end
									if (v184 == 2) then
										for v399 = v185, v79 do
											v188 = v188 + (772 - (326 + 445));
											v84[v399] = v186[v188];
										end
										break;
									end
									if (v184 == 0) then
										v185 = v86[8 - 6];
										v186, v187 = v77(v84[v185](v13(v84, v185 + (2 - 1), v79)));
										v184 = 2 - 1;
									end
								end
							elseif (v87 == 77) then
								v78 = v86[714 - ((1629 - (35 + 1064)) + 181)];
							elseif v84[v86[883 - (614 + 267)]] then
								v78 = v78 + 1;
							else
								v78 = v86[35 - (19 + 13)];
							end
						elseif (v87 <= (127 - 48)) then
							local v189 = 0;
							local v190;
							local v191;
							local v192;
							while true do
								if (v189 == ((3 + 1) - 2)) then
									for v403 = 2 - 1, v86[2 + 2] do
										local v404 = 0 - 0;
										local v405;
										while true do
											if ((4291 > 1912) and (v404 == 1)) then
												if (v405[1 - 0] == (1830 - (1293 + 519))) then
													v192[v403 - (1 - 0)] = {v84,v405[6 - 3]};
												else
													v192[v403 - ((1 + 3) - 3)] = {v66,v405[1 + 2]};
												end
												v83[#v83 + (2 - 1)] = v192;
												break;
											end
											if (v404 == 0) then
												v78 = v78 + 1 + 0;
												v405 = v74[v78];
												v404 = 1 + 0;
											end
										end
									end
									v84[v86[2]] = v29(v190, v191, v67);
									break;
								end
								if (1 == v189) then
									v192 = {};
									v191 = v10({}, {__index=function(v406, v407)
										local v408 = v192[v407];
										return v408[1 + 0][v408[1098 - (709 + 387)]];
									end,__newindex=function(v409, v410, v411)
										local v412 = v192[v410];
										v412[1][v412[1860 - (673 + 1185)]] = v411;
									end});
									v189 = 2;
								end
								if (0 == v189) then
									v190 = v75[v86[8 - 5]];
									v191 = nil;
									v189 = 3 - 2;
								end
							end
						elseif ((2003 < 2339) and (v87 > (131 - 51))) then
							local v311 = v86[2 + 0];
							local v312 = v84[v311];
							local v313 = v86[3 + 0];
							for v379 = 1 - 0, v313 do
								v312[v379] = v84[v311 + v379];
							end
						else
							v84[v86[1 + 1]][v86[3]] = v86[7 - 3];
						end
					elseif ((432 == 432) and (v87 <= 84)) then
						if ((v87 <= (160 - 78)) or (1145 >= 1253)) then
							local v193 = 1880 - (446 + 1434);
							local v194;
							while true do
								if (v193 == (1283 - (1040 + 243))) then
									v194 = v86[1668 - (636 + 1030)];
									do
										return v13(v84, v194, v79);
									end
									break;
								end
							end
						elseif (v87 > (247 - 164)) then
							local v316 = 0;
							local v317;
							local v318;
							local v319;
							while true do
								if (v316 == ((945 + 903) - (559 + 1288))) then
									v319 = v84[v317 + (1933 - (595 + 14 + 1322))];
									if (v319 > (454 - (13 + 441))) then
										if ((3418 > 2118) and (v318 > v84[v317 + (3 - 2)])) then
											v78 = v86[7 - 4];
										else
											v84[v317 + (14 - (4 + 7))] = v318;
										end
									elseif (v318 < v84[v317 + 1 + 0]) then
										v78 = v86[10 - 7];
									else
										v84[v317 + 2 + 1] = v318;
									end
									break;
								end
								if (v316 == (0 + 0)) then
									v317 = v86[5 - 3];
									v318 = v84[v317];
									v316 = 1 + 0;
								end
							end
						else
							local v320 = 0 + 0;
							local v321;
							while true do
								if (v320 == 0) then
									v321 = v86[3 - 1];
									v84[v321](v13(v84, v321 + 1, v79));
									break;
								end
							end
						end
					elseif (v87 <= 86) then
						if ((3066 <= 3890) and (v87 == 85)) then
							v84[v86[2 + 0]] = #v84[v86[2 + 1]];
						else
							local v323 = 0 + 0;
							local v324;
							local v325;
							local v326;
							local v327;
							while true do
								if ((v323 == (1 + (221 - (55 + 166)))) or (2998 >= 3281)) then
									v79 = (v326 + v324) - (1 + 0);
									v327 = 433 - (153 + 280);
									v323 = 5 - 3;
								end
								if (v323 == (2 + 0)) then
									for v472 = v324, v79 do
										v327 = v327 + 1;
										v84[v472] = v325[v327];
									end
									break;
								end
								if (v323 == (0 + 0)) then
									v324 = v86[2];
									v325, v326 = v77(v84[v324](v13(v84, v324 + 1 + 0, v79)));
									v323 = 1 + 0;
								end
							end
						end
					elseif (v87 > (64 + 23)) then
						v84[v86[2]] = v29(v75[v86[4 - 1]], nil, v67);
					else
						local v329 = 0 + 0;
						local v330;
						local v331;
						while true do
							if (v329 == (667 - (89 + 578))) then
								v330 = v86[2 + 0 + 0];
								v331 = v84[v86[5 - 2]];
								v329 = 1050 - (572 + 477);
							end
							if ((v329 == (1 + 0)) or (4649 <= 2632)) then
								v84[v330 + 1 + 0] = v331;
								v84[v330] = v331[v86[1 + 3]];
								break;
							end
						end
					end
				elseif ((v87 <= (180 - (84 + 2))) or (3860 > 4872)) then
					if ((v87 <= 91) or (3998 == 2298)) then
						if (v87 <= (146 - 57)) then
							v84[v86[1 + 1 + 0]] = {};
						elseif (v87 == (932 - (497 + (1317 - 972)))) then
							local v332 = 0 + 0;
							local v333;
							while true do
								if (v332 == ((297 - (36 + 261)) + 0)) then
									v333 = v86[1335 - (605 + 728)];
									v84[v333](v84[v333 + 1]);
									break;
								end
							end
						else
							local v334 = 0 + 0;
							local v335;
							while true do
								if (v334 == 0) then
									v335 = v86[3 - 1];
									v84[v335] = v84[v335](v13(v84, v335 + 1, v79));
									break;
								end
							end
						end
					elseif (v87 <= ((8 - 3) + 87)) then
						v84[v86[7 - 5]] = v86[3] ~= (0 + 0);
					elseif (v87 == (257 - 164)) then
						if ((v84[v86[2 + 0]] == v84[v86[493 - ((1825 - (34 + 1334)) + 32)]]) or (8 >= 2739)) then
							v78 = v78 + 1 + 0;
						else
							v78 = v86[3];
						end
					else
						local v336 = v86[1 + 1];
						local v337 = v84[v336 + 2];
						local v338 = v84[v336] + v337;
						v84[v336] = v338;
						if ((2590 == 2590) and (v337 > (1402 - (832 + 570)))) then
							if (v338 <= v84[v336 + 1 + 0]) then
								v78 = v86[1 + 2 + 0];
								v84[v336 + 3] = v338;
							end
						elseif (v338 >= v84[v336 + (1284 - (1035 + 248))]) then
							v78 = v86[10 - 7];
							v84[v336 + 2 + 1] = v338;
						end
					end
				elseif (v87 <= (893 - (588 + (229 - (20 + 1))))) then
					if (v87 <= 95) then
						local v197 = v86[5 - 3];
						v84[v197] = v84[v197](v13(v84, v197 + (1801 - (884 + 916)), v86[6 - 3]));
					elseif ((v87 == (56 + 40)) or (82 >= 1870)) then
						do
							return v84[v86[2]];
						end
					else
						v84[v86[655 - (232 + 220 + 201)]] = v84[v86[3]] % v84[v86[1893 - (1569 + 320)]];
					end
				elseif (v87 <= (25 + 74)) then
					if (v87 > (19 + (398 - (134 + 185)))) then
						v84[v86[6 - 4]] = v84[v86[608 - ((1449 - (549 + 584)) + 289)]] + v86[10 - 6];
					else
						local v342 = v86[1 + 1];
						do
							return v84[v342](v13(v84, v342 + (1454 - (666 + 787)), v86[(1113 - (314 + 371)) - (360 + 65)]));
						end
					end
				elseif ((2624 < 4557) and (v87 > 100)) then
					if not v84[v86[2 + 0]] then
						v78 = v78 + (255 - (79 + 175));
					else
						v78 = v86[4 - 1];
					end
				else
					v84[v86[2 + 0]] = v86[8 - 5] + v84[v86[7 - 3]];
				end
				v78 = v78 + 1;
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
